apiVersion: v1
kind: Template
metadata:
  name: graph-backup-buildconfig
  annotations:
    description: >
      This is Thoth Graph Backup CronJob BuildConfig, this template is meant to be used by Bots,
      but could also be used by humans...
    openshift.io/display-name: "Thoth: Graph Backup Job BuildConfig"
    version: 0.1.0
    tags: thoth,graph-backup,ai-stacks,aistacks,graph
    template.openshift.io/documentation-url: https://github.com/Thoth-Station/
    template.openshift.io/long-description: >
      This template defines resources needed to deploy Thoth Graph Backup Job BuildConfig to OpenShift.
    template.openshift.io/provider-display-name: Red Hat, Inc.
    thoth-station.ninja/template-version: 0.1.0
  labels:
    template: graph-backup-buildconfig
    app: thoth
    component: configmap

objects:
  - kind: BuildConfig
    apiVersion: build.openshift.io/v1
    metadata:
      name: s2i-thoth-ubi8-py36-postgres
      annotations:
        thoth-station.ninja/template-version: 0.1.0
      labels:
        app: thoth
        component: graph-backup
    spec:
      resources:
        requests:
          memory: "256Mi"
          cpu: "500m"
        limits:
          memory: "256Mi"
          cpu: "500m"
      output:
        to:
          kind: ImageStreamTag
          name: "s2i-thoth-ubi8-py36-postgres:${IMAGE_STREAM_TAG}"
      source:
        dockerfile: |
          FROM s2i-thoth-ubi8-py36:latest
          ENV LANG=en_US.UTF-8
          USER 0
          RUN dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm
          RUN dnf update -y
          RUN dnf install -y postgresql96
          USER 1001
        type: Git
        git:
          uri: ${GITHUB_URL}
          ref: ${GITHUB_REF}
      strategy:
        type: Docker
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: s2i-thoth-ubi8-py36:latest
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChange: {}
        - type: Generic
          generic:
            secretReference:
              name: generic-webhook-secret

  - kind: BuildConfig
    apiVersion: build.openshift.io/v1
    metadata:
      name: graph-backup-job
      annotations:
        thoth-station.ninja/template-version: 0.1.0
      labels:
        app: thoth
        component: graph-backup
    spec:
      resources:
        limits:
          cpu: 1
          memory: 768Mi
        requests:
          cpu: 1
          memory: 768Mi
      output:
        to:
          kind: ImageStreamTag
          name: "graph-backup-job:${IMAGE_STREAM_TAG}"
      source:
        type: Git
        git:
          uri: ${GITHUB_URL}
          ref: ${GITHUB_REF}
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: s2i-thoth-ubi8-py36-postgres:latest
          env:
            - name: ENABLE_PIPENV
              value: '1'
            - name: UPGRADE_PIP_TO_LATEST
              value: ''
            - name: "THOTH_DRY_RUN"
              value: "1"
            - name: "THOTH_ADVISE"
              value: ${THOTH_ADVISE}
            - name: "THAMOS_VERBOSE"
              value: "1"
            - name: "THAMOS_DEBUG"
              value: "1"
            - name: "THAMOS_CONFIG_TEMPLATE"
              value: ".thothTemplate.yaml"
            - name: "THAMOS_CONFIG_EXPAND_ENV"
              value: "1"
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChange: {}
        - type: Generic
          generic:
            secretReference:
              name: generic-webhook-secret

parameters:
  - description: Name of the GitHub repository for Thoth's Graph Backup Job
    displayName: Git Repository
    required: true
    name: GITHUB_URL
    value: 'https://github.com/thoth-station/graph-backup-job'

  - description: Git reference to be used for Thoth's Graph Backup Job
    displayName: Git Reference
    required: true
    name: GITHUB_REF
    value: 'master'

  - description: Tag of the output ImageStream the resulting container image should go to
    displayName: ImageStream Tag
    required: true
    name: IMAGE_STREAM_TAG
    value: 'latest'

  - description: Thamos Advise setup tag value
    displayName: THOTH_ADVISE
    required: true
    name: THOTH_ADVISE
    value: "1"
