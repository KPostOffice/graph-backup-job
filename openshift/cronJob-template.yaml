apiVersion: v1
kind: Template
metadata:
  name: graph-backup-cronjob
  annotations:
    description: >
      This is Thoth Graph Backup CronJob CronJob, this template is meant to be used by Bots,
      but could also be used by humans...
    openshift.io/display-name: "Thoth: Graph Backup Job"
    version: 0.1.0
    tags: thoth,graph-backup,ai-stacks,aistacks,graph
    template.openshift.io/documentation-url: https://github.com/Thoth-Station/
    template.openshift.io/long-description: >
      This template defines resources needed to deploy Thoth Graph Backup Job CronJob to OpenShift.
    template.openshift.io/provider-display-name: "Red Hat, Inc."
    thoth-station.ninja/template-version: 0.1.0
  labels:
    template: graph-backup-cronjob
    app: thoth
    component: graph-backup

parameters:
  - description: Registry the ImageStream to be use lives in
    displayName: ImageStream Registry
    required: true
    name: IMAGE_STREAM_REGISTRY
    value: "docker-registry.default.svc:5000"

  - displayName: Suspend CronJob run
    description: Suspend CronJob run
    required: true
    name: THOTH_SUSPEND_JOB
    value: "true"

  - description: Project the ImageStream to be use lives in
    displayName: ImageStream Project
    required: true
    name: IMAGE_STREAM_NAMESPACE
    value: "thoth-infra-stage"

  - description: Tag of the ImageStream to be use
    displayName: ImageStream Tag
    required: true
    name: IMAGE_STREAM_TAG
    value: "latest"

objects:
  - kind: CronJob
    apiVersion: batch/v1beta1
    metadata:
      name: graph-backup
      annotations:
        thoth-station.ninja/template-version: 0.1.0
      labels:
        app: thoth
        component: graph-backup
    spec:
      schedule: "@daily"
      suspend: ${{THOTH_SUSPEND_JOB}}
      concurrencyPolicy: Forbid
      successfulJobsHistoryLimit: 2
      failedJobsHistoryLimit: 4
      startingDeadlineSeconds: 5000000
      jobTemplate:
        spec:
          template:
            metadata:
              labels:
                app: thoth
                component: graph-backup
            spec:
              containers:
                - image: "${IMAGE_STREAM_REGISTRY}/${IMAGE_STREAM_NAMESPACE}/graph-backup-job:${IMAGE_STREAM_TAG}"
                  name: graph-backup
                  env:
                    - name: THOTH_DEPLOYMENT_NAME
                      valueFrom:
                        configMapKeyRef:
                          key: storage-bucket-name
                          name: thoth
                    - name: THOTH_S3_ENDPOINT_URL
                      valueFrom:
                        configMapKeyRef:
                          key: ceph-host
                          name: thoth
                    - name: THOTH_CEPH_BUCKET
                      valueFrom:
                        configMapKeyRef:
                          key: ceph-bucket-name
                          name: thoth
                    - name: THOTH_CEPH_BUCKET_PREFIX
                      valueFrom:
                        configMapKeyRef:
                          key: ceph-bucket-prefix
                          name: thoth
                    - name: THOTH_CEPH_KEY_ID
                      valueFrom:
                        secretKeyRef:
                          name: thoth
                          key: ceph-key-id
                    - name: THOTH_CEPH_SECRET_KEY
                      valueFrom:
                        secretKeyRef:
                          name: thoth
                          key: ceph-secret-key
                    - name: RSYSLOG_HOST
                      valueFrom:
                      configMapKeyRef:
                        key: rsyslog-host
                        name: thoth
                    - name: RSYSLOG_PORT
                      valueFrom:
                      configMapKeyRef:
                        key: rsyslog-port
                        name: thoth
                    - name: SENTRY_DSN
                      valueFrom:
                        secretKeyRef:
                          name: thoth
                          key: sentry-dsn
                    - name: PROMETHEUS_PUSHGATEWAY_URL
                      valueFrom:
                        configMapKeyRef:
                          name: thoth
                          key: metrics-pushgateway-url
                    - name: KNOWLEDGE_GRAPH_HOST
                      valueFrom:
                        configMapKeyRef:
                          key: postgresql-host
                          name: thoth
                    - name: KNOWLEDGE_GRAPH_PORT
                      value: "5432"
                    - name: KNOWLEDGE_GRAPH_SSL_DISABLED
                      value: "1"
                    - name: KNOWLEDGE_GRAPH_USER
                      valueFrom:
                        secretKeyRef:
                          name: postgresql
                          key: database-user
                    - name: KNOWLEDGE_GRAPH_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: postgresql
                          key: database-password
                    - name: KNOWLEDGE_GRAPH_DATABASE
                      valueFrom:
                        secretKeyRef:
                          name: postgresql
                          key: database-name
                  resources:
                    requests:
                      memory: "256Mi"
                      cpu: "500m"
                    limits:
                      memory: "256Mi"
                      cpu: "500m"
                  livenessProbe:
                    tcpSocket:
                      port: 80
                    initialDelaySeconds: 7200
                    failureThreshold: 1
                    periodSeconds: 10
              restartPolicy: OnFailure
